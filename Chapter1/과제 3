import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Provider(
      create: (BuildContext context) {  },
      child: MaterialApp(
        title: 'Flutter Demo',
        theme: ThemeData(

          primarySwatch: Colors.blue,
        ),
        home: const MyHomePage(title: 'Flutter Demo Home Page'),
      ),
    );
  }
}



class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key, required this.title}) : super(key: key);



  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;
  int total = 0;
  bool _value = false;
  bool _value2 = false;
  bool _value3 = false;
  bool _value4 = false;
  bool _value5 = false;
  bool _value6 = false;
  bool _value7 = false;
  bool _value8 = false;

  void _incrementCounter() {
    setState(() {

      _counter = total;
    });
  }

  @override
  Widget build(BuildContext context) {

    return Scaffold(
      appBar: AppBar(

        title: Text(widget.title),
      ),
      body: Center(
        child: Column(

          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              '번아웃 증후군 테스트',
            ),
            const Text(
              '================================================',
            ),
            Row(
                children: [

                  Checkbox(onChanged: (bool? value) {
                    setState(() {
                      _value = value!;
                      if (_value){
                        total++;
                      }
                      else {
                        total--;
                      }
                    });
                  }, value: _value),
                  const Text(
                    '일하기에는 몸이 너무 지쳤다는 생각이 든다.',
                  ),
                ]),
            Row(
                children: [

                  Checkbox(onChanged: (bool? value) {
                    setState(() {
                      _value2 = value!;
                      if (_value2){
                        total++;
                      }
                      else {
                        total--;
                      }
                    });
                  }, value: _value2),
                  const Text(
                    '아침에 출근할 생각만 하면 피곤해진다.',
                  ),
                ]),
            Row(
                children: [

                  Checkbox(onChanged: (bool? value) {
                    setState(() {
                      _value3 = value!;
                      if (_value3){
                        total++;
                      }
                      else {
                        total--;
                      }
                    });
                  }, value: _value3),
                  const Text(
                    '스트레스를 풀기 위해 쾌락 요소들을 찾는다.',
                  ),
                ]),
            Row(
                children: [

                  Checkbox(onChanged: (bool? value) {
                    setState(() {
                      _value4 = value!;
                      if (_value4){
                        total++;
                      }
                      else {
                        total--;
                      }
                    });
                  }, value: _value4),
                  const Text(
                    '일이 주어지면 무기력하고 싫증이 느껴진다.',
                  ),
                ]),
            Row(
                children: [

                  Checkbox(onChanged: (bool? value) {
                    setState(() {
                      _value5 = value!;
                      if (_value5){
                        total++;
                      }
                      else {
                        total--;
                      }
                    });
                  }, value: _value5),
                  const Text(
                    '주어진 업무를 할 때 소극적이고 방어적이다.',
                  ),
                ]),
            Row(
                children: [

                  Checkbox(onChanged: (bool? value) {
                    setState(() {
                      _value6 = value!;
                      if (_value6){
                        total++;
                      }
                      else {
                        total--;
                      }
                    });
                  }, value: _value6),
                  const Text(
                    '자신이 하는 일에 관심 조차 없다.',
                  ),
                ]),
            Row(
                children: [

                  Checkbox(onChanged: (bool? value) {
                    setState(() {
                      _value7 = value!;
                      if (_value7){
                        total++;
                      }
                      else {
                        total--;
                      }
                    });
                  }, value: _value7),
                  const Text(
                    '최근 짜증이 늘고 불안감이 잘 느껴진다.',
                  ),
                ]),
            Row(
                children: [

                  Checkbox(onChanged: (bool? value) {
                    setState(() {
                      _value8 = value!;
                      if (_value8){
                        total++;
                      }
                      else {
                        total--;
                      }
                    });
                  }, value: _value8),
                  const Text(
                    '일하는 것에 부담감과 긴장감을 느낀다.',
                  ),
                ]),
            const Text(
              '================================================',
            ),
            Text(
              '당신은 $total 개에 해당됩니다.',
              style: Theme.of(context).textTheme.headline4,
            ),

            FlatButton(onPressed: (){
              Navigator.push(context, MaterialPageRoute(builder: (BuildContext context){
                return SecondScreen();
              }));
            },child: Text("다음 화면을 누르면 결과를 볼 수 있습니다.")),

          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: const Icon(Icons.add),
      ), // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}

class CountProvider with ChangeNotifier{
  int _count=0;
  int get count => _count;

  void increase(){
    _count++;
  }
}
class SecondScreen extends StatelessWidget{
  const SecondScreen({Key? key}) : super(key: key);
  @override
  Widget build(BuildContext context){
    return Scaffold(
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              '0~2 개인가요?: 아직은 안전합니다..',
              style: TextStyle(
                  color: Colors.green,
                  letterSpacing: 2.0,
                  fontSize: 20.0,
                  fontWeight: FontWeight.bold
              ),
            ),
            const Text(
              '3~6 개인가요? 주의가 필요합니다.',
              style: TextStyle(
                  color: Colors.blue,
                  letterSpacing: 2.0,
                  fontSize: 20.0,
                  fontWeight: FontWeight.bold
              ),
            ),
            const Text(
              '7~8 개인가요? 고위험군에 속합니다 !!!',
              style: TextStyle(
                  color: Colors.red,
                  letterSpacing: 2.0,
                  fontSize: 20.0,
                  fontWeight: FontWeight.bold
              ),
            ),

          ],
        ),
      ),
    );
  }
}

